generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id
  name          String
  email         String          @unique
  CompanyMember CompanyMember[]
}

model Project {
  id          String          @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  members     ProjectMember[]
  tasks       Task[]
}

model ProjectMember {
  id        String   @id @default(uuid())
  memberId  String
  name      String
  role      String
  email     String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])

  @@unique([projectId, memberId])
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  dueDate     DateTime
  assignedTo  String
  projectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  archived    Boolean  @default(false)
  project     Project  @relation(fields: [projectId], references: [id])
}

model Company {
  id            String          @id @default(uuid())
  name          String          @unique
  createdAt     DateTime        @default(now())
  CompanyMember CompanyMember[]
}

model CompanyMember {
  id        String   @id @default(uuid())
  userId    String
  companyId String
  createdAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, companyId])
}
